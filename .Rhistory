```{r}
plotenv_SST_Arag<- function(d, ...){
x1 <- c(d[1,1], d[1,1], d[3,1], d[3,1])
y1 <- c(d[2,1], d[2,3], d[2,3], d[2,1])
polygon(x1, y1, ...)
}
plotenv_SST_Arag(mean_IndoPac_2000)
PlotEnvel(IndoPac_2100_8.5, adjustcolor("darkgreen", 0.5))
## Plot climate envelopes for specific regions
plot(c(-5, 40), c(0, 12), type="n")
plot(c(-5, 15), c(0, 4), type="n")
IndoPac_2000 <- dat1 %>% filter(Lon<200 & Lon>50 & abs(Lat) < 25 & Year > 1950 & Year < 2010)
PlotEnvel(IndoPac_2000, "darkgreen")
## GetEnvel function ####
PlotEnvel <- function(datf, col2){
a1 <- datf %>% select(SST, Arag)
a1 <- bin2(cbind(a1$SST, a1$Arag), ab, nbin)
a2 <- a1$nc
a2[a2>0] <- 1
image(x,y, a2, add=TRUE, col=c(rgb(0,0,0,0), col2))
}
PlotEnvel(IndoPac_2000, "darkgreen")
PlotEnvel(IndoPac_2100_8.5, adjustcolor("darkgreen", 0.5))
Art_2000 <- dat1 %>% filter(Lat > 66.5 & Year > 1950 & Year < 2010)
PlotEnvel(Art_2000, adjustcolor("red", 0.6))
Art_2100_8.5 <- dat8.5 %>% filter(Lat > 66.5)
Ant_2000 <- dat1 %>% filter(Lat < -66.5 & Year > 1950 & Year < 2010)
PlotEnvel(Ant_2000, adjustcolor("blue", 0.7))
Ant_2100_8.5 <- dat8.5 %>% filter(Lat < -66.5)
PlotEnvel(Ant_2100_8.5, adjustcolor("yellow", 0.5))
## Plot climate envelopes for specific regions
plot(c(-5, 40), c(0, 12), type="n")
IndoPac_2000 <- dat1 %>% filter(Lon<200 & Lon>50 & abs(Lat) < 25 & Year > 1950 & Year < 2010)
PlotEnvel(IndoPac_2000, "darkgreen")
IndoPac_2100_8.5 <- dat8.5 %>% filter(Lon<200 & Lon>50 &
abs(Lat) < 25)
PlotEnvel(IndoPac_2100_8.5, adjustcolor("darkgreen", 0.5))
plot(c(-5, 15), c(0, 4), type="n")
Art_2000 <- dat1 %>% filter(Lat > 66.5 & Year > 1950 & Year < 2010)
PlotEnvel(Art_2000, adjustcolor("red", 0.6))
Art_2100_8.5 <- dat8.5 %>% filter(Lat > 66.5)
PlotEnvel(Art_2100_8.5, adjustcolor("red", 0.3))
Ant_2000 <- dat1 %>% filter(Lat < -66.5 & Year > 1950 & Year < 2010)
PlotEnvel(Ant_2000, adjustcolor("blue", 0.7))
Ant_2100_8.5 <- dat8.5 %>% filter(Lat < -66.5)
PlotEnvel(Ant_2100_8.5, adjustcolor("yellow", 0.5))
##################################
#### System setup ####
##################################
## Specify location of data ####
setwd("/Users/lotterhos/Documents/GitHub/OceanClimateNovelty")
source("src/0-Novelty_Oceans_Functions.R")
##################################
#### Read in the input data ####
##################################
dat1 <- fread("/Users/lotterhos/Google Drive/katie_research/2018-OceanClimateNovelty/Data/Lotterhos/Katie_Temp_Arag_1800_2000.txt", sep = ",")
dat4.5 <- fread("/Users/lotterhos/Google Drive/katie_research/2018-OceanClimateNovelty/Data/Lotterhos/Katie_Temp_Arag_2070_2100_RCP45.txt", sep = ",")
dat8.5 <- fread("/Users/lotterhos/Google Drive/katie_research/2018-OceanClimateNovelty/Data/Lotterhos/Katie_Temp_Arag_2070_2100_RCP85.txt", sep = ",")
ICV <- fread("/Users/lotterhos/Google Drive/katie_research/2018-OceanClimateNovelty/Data/ICV_Temp_Arag_pH_1960_2020.txt")
head(dat1)
head(dat8.5)
head(dat4.5)
head(ICV)
unique(dat1$Year)
unique(dat8.5$Year)
unique(dat4.5$Year)
unique(ICV$Year)
hist(c(dat1$Arag, dat8.5$Arag))
hist(log10(c(dat1$Arag, dat8.5$Arag)))
##################################
#### Log-transform Arag ####
##################################
dat1$Arag <- log10(dat1$Arag)
dat4.5$Arag <- log10(dat4.5$Arag)
dat8.5$Arag <- log10(dat8.5$Arag)
ICV$Arag <- log10(ICV$Arag)
#--------------------------------
#### 40-year climate normals ####
#--------------------------------
# for example, 1930 represents from 1/1/1925 to 12/31/1934.
dat_2000 <-   dat1 %>% filter(Year>1960 & Year<2010)
dim(dat_2000)
# s_Arag <- sd(dat_2000$Arag)
# x_pH <- mean(dat_2000$pH)
# s_pH <- sd(dat_2000$pH)
#
# head(dat_2000)
#   dat_2000$SST <- (dat_2000$SST - x_SST)/s_SST
#   dat_2000$Arag <- (dat_2000$Arag - x_Arag)/s_Arag
#   dat_2000$pH <- (dat_2000$pH - x_pH)/s_pH
#   dat_2000 %>% summarise_each(sd)
#
dat_1800 <- dat1 %>% filter(Year<1850)
dim(dat_1800)
#   dat_1800$SST <- (dat_1800$SST - x_SST)/s_SST
#   dat_1800$Arag <- (dat_1800$Arag - x_Arag)/s_Arag
#   dat_1800$pH <- (dat_1800$pH - x_pH)/s_pH
#
#
dat_2100_8.5 <-   dat8.5
#     dim(dat_2100_8.5)
#     dat_2100_8.5$SST <- (dat_2100_8.5$SST - x_SST)/s_SST
#     dat_2100_8.5$Arag <- (dat_2100_8.5$Arag - x_Arag)/s_Arag
#     dat_2100_8.5$pH <- (dat_2100_8.5$pH - x_pH)/s_pH
#
dat_2100_4.5 <-   dat4.5
sum(!complete.cases(dat_1800))
sum(!complete.cases(dat_2000))
sum(!complete.cases(dat_2100_4.5))
sum(!complete.cases(dat_2100_8.5))
sum(!complete.cases(ICV))
# Calculate climate normals
norm_1800 <- calculate_normals_annual(dat_1800)
head(norm_1800)
head(dat1)
norm_2000 <- calculate_normals_annual(dat_2000)
norm_2100_8.5 <- calculate_normals_annual(dat_2100_8.5)
norm_2100_4.5 <- calculate_normals_annual(dat_2100_4.5)
#--------------------------------
### data frame to link station number to Lat Long ####
#--------------------------------
head(dat8.5)
stations <- unique(dat8.5$No)
stationInfo = data.frame(stations=stations, lat=NA, long=NA)
unik <- which(!duplicated(dat8.5$No))
head(unik)
stationInfo$lat <- dat8.5$Lat[unik]
stationInfo$long <- dat8.5$Lon[unik]
names(stationInfo)[1] <- "No"
head(stationInfo)
which(!complete.cases(stationInfo))
#--------------------------------
### ICV matrix
head(ICV)
C <- ICV %>% select(No, SST, Arag, pH)
head(C)
A <- norm_1800
# 1800 climate normals
head(A)
dim(A)
# subset the 2000 data to the same stations as the 1800 data
B <- norm_2000
# 2000 climate normals
head(B)
dim(B)
# sanity check to make sure stations in right order
identical(A$No, B$No) # should be true
head(C)
NN.sigma_1800_today <- loop_sigma_D(A, B, C, "_1800_today")
head(NN.sigma_1800_today)
NN.sigma_1800_today_N <- loop_sigma_D(A[N_hem], B[N_hem], C, "_1800_today")
#---------------
### Hemisphere Indexes ###
# N. hemisphere
N_hem <- which(stationInfo$lat>=0)
S_hem <- which(stationInfo$lat<0)
#NN.sigma_1800_today <- loop_sigma_D(A, B, C, "_1800_today") # uses whole ocean as a baseline
NN.sigma_1800_today_N <- loop_sigma_D(A[N_hem], B[N_hem], C, "_1800_today")
#NN.sigma_1800_today <- loop_sigma_D(A, B, C, "_1800_today") # uses whole ocean as a baseline
NN.sigma_1800_today_N <- loop_sigma_D(A[N_hem,], B[N_hem,], C, "_1800_today")
head(NN.sigma_1800_today)
NN.sigma_1800_today <- rbind(NN.sigma_1800_today_N, NN.sigma_1800_today_S)
NN.sigma_1800_today_S <- loop_sigma_D(A[S_hem,], B[S_hem,], C, "_1800_today")
NN.sigma_1800_today <- rbind(NN.sigma_1800_today_N, NN.sigma_1800_today_S)
head(NN.sigma_1800_today)
hist(NN.sigma_1800_today$numPCs_1800_today)
final_dat <- full_join(NN.sigma_1800_today, stationInfo, by="No")
head(NN.sigma_1800_today)
final_dat <- full_join(NN.sigma_1800_today, stationInfo, by="No")
head(final_dat)
final_dat[which(is.infinite(final_dat$NN.sigma_1800_today)),]
final_dat[which(!complete.cases(final_dat)),]
identical(nrow(final_dat), nrow(stationInfo))
# Visualize
world <- map_data("world2")
Plot_nonInt(final_dat$lat, final_dat$long,
final_dat$NN.sigma_1800_today, world, "sigD novel 2000")
NNdat <- final_dat$NN.station_1800_today
names(NNdat) <- "No"
head(stationInfo)
NNdat <- final_dat$NN.station_1800_today
head(NNdat)
final_dat2 <- full_join(final_dat, stationInfo,
by.x = "NN.station_1800_today",
by.y = "No")
head(final_dat2
)
stationInfoNN <- stationInfo
final_dat <- full_join(NN.sigma_1800_today, stationInfo, by="No")
head(final_dat)
final_dat[which(is.infinite(final_dat$NN.sigma_1800_today)),]
final_dat[which(!complete.cases(final_dat)),]
identical(nrow(final_dat), nrow(stationInfo))
names(stationInfoNN) <-
final_dat2 <- full_join(final_dat, stationInfo,
by.x = "NN.station_1800_today",
by.y = "No")
stationInfoNN <- stationInfo
names(stationInfoNN)
names(stationInfoNN) <- c("No", "NN.lat", "NN.long")
final_dat2 <- full_join(final_dat, stationInfoNN,
by.x = "NN.station_1800_today",
by.y = "No")
head(final_dat2)
?full_join
final_dat2 <- full_join(final_dat, stationInfoNN,
by= "NN.station_1800_today" = "No")
final_dat2 <- full_join(final_dat, stationInfoNN,
by= c("NN.station_1800_today" = "No")
)
head(final_dat2)
min(final_dat$long)
max(final_dat$long)
plot(c(0,380), c(-90, 90))
for (i in 1:nrow(final_dat2)){
arrows(long[i], lat[i], NN.long[i], NN.lat[i] )
}
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i] )
plot(c(0,380), c(-90, 90))
for (i in 1:nrow(final_dat2)){
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i] )
}
sub <- sample(1:nrow(final_dat2), 100)
for (i in sub){
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i] )
}
plot(c(0,380), c(-90, 90))
sub <- sample(1:nrow(final_dat2), 100)
for (i in sub){
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i] )
}
sub <- sample(1:nrow(final_dat2), 500)
for (i in sub){
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i] )
}
?arrows
plot(c(0,380), c(-90, 90))
for (i in sub){
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i], code=2,
length=0.1)
}
Plot_nonInt(final_dat$lat, final_dat$long,
final_dat$NN.sigma_1800_today, world, "sigD novel 2000")
plot(c(0,380), c(-90, 90))
for (i in sub){
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i], code=2,
length=0.1, col=adjustcolor(0,0,0,0.5))
}
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i], code=2,
length=0.1, col=adjustcolor("black",0.5))
plot(c(0,380), c(-90, 90))
for (i in sub){
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i], code=2,
length=0.1, col=adjustcolor("black",0.5))
}
plot(c(0,380), c(-90, 90))
for (i in sub){
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i],
code=1,
# want to plot from NN 1800 to focal in 2000
length=0.1, col=adjustcolor("black",0.5))
}
sub <- sample(1:nrow(final_dat2), 1000)
plot(c(0,380), c(-90, 90))
for (i in sub){
arrows(final_dat2$long[i], final_dat2$lat[i],
final_dat2$NN.long[i], final_dat2$NN.lat[i],
code=1,
# want to plot from NN 1800 to focal in 2000
length=0.1, col=adjustcolor("black",0.5))
}
results_dir <- "/Users/lotterhos/Google Drive/katie_research/2018-OceanClimateNovelty/Results/HemisphereRestricted/"
results_dir <- "/Users/lotterhos/Google Drive/katie_research/2018-OceanClimateNovelty/Results/HemisphereRestricted/"
write.csv(paste0(results_dir, "1800base_2000_novelty.csv"))
write.csv(final_dat2, paste0(results_dir, "1800base_2000_novelty.csv"))
write.csv(final_dat2, paste0(results_dir, "1800base_2000_novelty_NShemrestrict.csv"))
condN <- final_dat2$lat>0
condN <- which(final_dat2$lat>0)
final_dat2$latshift[condN] <- final_dat2$lat[condN] -
final_dat2$NN.lat[condN]
final_dat2$latshift[condS] <- -1*(final_dat2$lat[condS] -
final_dat2$NN.lat[condS])
condS <- which(final_dat2$lat<0)
final_dat2$latshift[condS] <- -1*(final_dat2$lat[condS] -
final_dat2$NN.lat[condS])
head(final_dat2)
# how much latitudial change from 1800 to 2000?
# lat in 2000 - lat in 1800 (positive poleward)
final_dat2$latshift <- NA
condN <- which(final_dat2$lat>0)
final_dat2$latshift[condN] <- final_dat2$lat[condN] -
final_dat2$NN.lat[condN]
condS <- which(final_dat2$lat<0)
final_dat2$latshift[condS] <- -1*(final_dat2$lat[condS] -
final_dat2$NN.lat[condS])
hist(final_dat2$latshift)
a<- ggplot(final_dat2, aes(lat, long))
a
a<- ggplot(final_dat2, aes( long, lat))
final_dat2$sigmaCat[final_dat2$NN.sigma_1800_today <= 2] <- "Low"
final_dat2$sigmaCat[final_dat2$NN.sigma_1800_today > 2 & final_dat2$NN.sigma_1800_today <=4] <- "Moderate"
final_dat2$sigmaCat[final_dat2$NN.sigma_1800_today > 4] <- "High"
a<- ggplot(final_dat2, aes(long, lat))
a + geom_segment(aes(x = NN.long, y = NN.lat,
xend = long, yend = lat,
colour = "sigmaCat"),
data = final_dat2)
a<- ggplot(final_dat2[sub,], aes(long, lat))
a<- ggplot(final_dat2[sub,], aes(long, lat))
a + geom_segment(aes(x = NN.long, y = NN.lat,
xend = long, yend = lat,
colour = "sigmaCat"),
data = final_dat2[sub,])
colour = sigmaCat),
a<- ggplot(final_dat2[sub,], aes(long, lat))
head(final_dat2)
colour = NN.sigma_1800_today),
a + geom_segment(aes(x = NN.long, y = NN.lat,
xend = long, yend = lat,
colour = NN.sigma_1800_today),
arrow = arrow(length = unit(0.1,"cm")),
data = final_dat2[sub,])
write.csv(final_dat2, paste0(results_dir, "1800base_2000_novelty_NShemrestrict.csv"))
a + geom_segment(aes(x = NN.long, y = NN.lat,
xend = long, yend = lat,
colour = latshift),
arrow = arrow(length = unit(0.1,"cm")),
data = final_dat2[sub,])
a + geom_segment(aes(x = NN.long, y = NN.lat,
xend = long, yend = lat,
colour = latshift),
arrow = arrow(length = unit(0.1,"cm")),
data = final_dat2[sub,]) +
scale_color_brewer(palette="RdYlBl")
a + geom_segment(aes(x = NN.long, y = NN.lat,
xend = long, yend = lat,
colour = latshift),
arrow = arrow(length = unit(0.1,"cm")),
data = final_dat2[sub,]) +
scale_color_brewer(palette="RdYlBu")
library(RColorBrewer)
a + geom_segment(aes(x = NN.long, y = NN.lat,
xend = long, yend = lat,
colour = latshift),
arrow = arrow(length = unit(0.1,"cm")),
data = final_dat2[sub,]) +
scale_color_brewer(palette="RdYlBu")
a + geom_segment(aes(x = NN.long, y = NN.lat,
xend = long, yend = lat,
colour = latshift),
arrow = arrow(length = unit(0.1,"cm")),
data = final_dat2[sub,]) +
scale_color_gradient2(midpoint=0, low="blue", mid="white",
high="red", space ="Lab" )
a + geom_segment(aes(x = NN.long, y = NN.lat,
xend = long, yend = lat,
colour = latshift),
arrow = arrow(length = unit(0.1,"cm")),
data = final_dat2[sub,]) +
scale_color_gradient2(midpoint=0, low="blue", mid="grey",
high="red", space ="Lab" ) +
theme_classic()
a + geom_segment(aes(x = NN.long, y = NN.lat,
xend = long, yend = lat,
colour = NN.sigma_1800_today),
arrow = arrow(length = unit(0.1,"cm")),
data = final_dat2[sub,])
#--------------------------------
### Today analog to 1800 ####
# What are 1800 disappearing climates?
# disappearing climates are identified by comparing
# each past gridpoint (A) to all future climate realizations (B)
#--------------------------------
calc_sigma_D(A, B, C, 1)
calc_sigma_D(B, A, C, 1)
B <- norm_1800
A <- norm_2000
identical(A$No, B$No) # should be true
identical(sort(A$No), A$No) # should be true
NN.sigma_today_1800_N <- loop_sigma_D(A[N_hem], B[N_hem], C, "_today_1800")
#--------------------------------
### Today analog to 1800 Disappearance####
# What are 1800 disappearing climates?
# disappearing climates are identified by comparing
# each past gridpoint (A) to all future climate realizations (B)
#--------------------------------
calc_sigma_D(A, B, C, 1)
calc_sigma_D(B, A, C, 1)
B <- norm_1800
A <- norm_2000
identical(A$No, B$No) # should be true
identical(sort(A$No), A$No) # should be true
NN.sigma_today_1800_N <- loop_sigma_D(A[N_hem], B[N_hem], C, "_today_1800")
NN.sigma_today_1800_S <- loop_sigma_D(A[S_hem,], B[S_hem,], C, "_today_1800")
NN.sigma_today_1800_N <- loop_sigma_D(A[N_hem,], B[N_hem,], C, "_today_1800")
NN.sigma_today_1800_S <- loop_sigma_D(A[S_hem,], B[S_hem,], C, "_today_1800")
NN.sigma_today_1800 <- rbind(NN.sigma_today_1800_N,
NN.sigma_today_1800_S)
head(NN.sigma_today_1800)
final_dat2 <- full_join(final_dat, NN.sigma_today_1800)
final_dat2 <- full_join(stationInfo, NN.sigma_today_1800)
head(final_dat2)
dim(final_dat2)
Plot_nonInt(final_dat2$lat, final_dat2$long,
final_dat2$NN.sigma_today_1800, world, "sigD dis 2000")
ggplot(final_dat2) + geom_point(aes(x=NN.sigma_1800_today,
y=NN.sigma_today_1800,
color=lat), alpha=0.5) +
scale_color_gradient2(low="red", high="blue", mid="grey") +
theme_classic() + xlab("Novel climates today from 1800") +
ylab("Disappearing 1800 climates")
head(final_dat)
final_dat <- full_join(stationInfo, NN.sigma_1800_today,  by="No")
head(final_dat)
final_dat[which(is.infinite(final_dat$NN.sigma_1800_today)),]
final_dat[which(!complete.cases(final_dat)),]
identical(nrow(final_dat), nrow(stationInfo))
final_dat <- full_join(stationInfo, NN.sigma_1800_today,  by="No")
head(final_dat)
final_dat[which(is.infinite(final_dat$NN.sigma_1800_today)),]
final_dat[which(!complete.cases(final_dat)),]
#NN.sigma_1800_today[which(is.infinite(NN.sigma_1800_today))] <- NA
identical(nrow(final_dat), nrow(stationInfo))
# should be true, same number as stations as stationInfo
# Visualize
world <- map_data("world2")
Plot_nonInt(final_dat$lat, final_dat$long,
final_dat$NN.sigma_1800_today, world, "sigD novel 2000")
final_dat2 <- full_join(final_dat, NN.sigma_today_1800)
head(final_dat2)
dim(final_dat2)
Plot_nonInt(final_dat2$lat, final_dat2$long,
final_dat2$NN.sigma_today_1800, world, "sigD dis 2000")
ggplot(final_dat2) + geom_point(aes(x=NN.sigma_1800_today,
y=NN.sigma_today_1800,
color=lat), alpha=0.5) +
scale_color_gradient2(low="red", high="blue", mid="grey") +
theme_classic() + xlab("Novel climates today from 1800") +
ylab("Disappearing 1800 climates")
# Add the info for lat/long of nearest neighbors
stationInfo2 <- stationInfo
names(stationInfo2) <- paste0(names(stationInfo2),"_1800_today")
head(stationInfo2)
dim(stationInfo)
names(stationInfo2)[1] <-"NN.station_1800_today"
final_dat3 <- left_join(final_dat2, stationInfo2)
dim(final_dat3)
head(final_dat3)
tail(final_dat3)
stationInfo3 <- stationInfo
names(stationInfo3) <- paste0(names(stationInfo3),"_today_1800")
names(stationInfo3)[1] <- "NN.station_today_1800"
final_dat4 <- left_join(final_dat3, stationInfo3)
dim(final_dat4)
head(final_dat4)
head(stationInfo2)
dim(final_dat3)
head(final_dat3)
tail(final_dat3)
final_dat3$latshift <- NA
condN <- which(final_dat3$lat>0)
final_dat3$latshift_1800_today <- NA
condN <- which(final_dat3$lat>0)
final_dat3$latshift_1800_today[condN] <- final_dat2$lat[condN] -
final_dat2$lat_1800_today[condN]
final_dat3$latshift_1800_today[condN] <- final_dat3$lat[condN] -
final_dat3$lat_1800_today[condN]
condS <- which(final_dat3$lat<0)
sum(!complete.cases(final_dat3))
sum(!complete.cases(final_dat2))
summary(final_dat3, NN.station_today_1800)
# Should both be 0
sum(!complete.cases(final_dat2))
sum(!complete.cases(final_dat3))
head(final_dat3[!complete.cases(final_dat3),])
final_dat3$latshift_1800_today <- NA
condN <- which(final_dat3$lat>0)
final_dat3$latshift_1800_today[condN] <- final_dat3$lat[condN] -
final_dat3$lat_1800_today[condN]
condS <- which(final_dat3$lat<0)
final_dat3$latshift[condS] <- -1*(final_dat2$lat[condS] -
final_dat2$NN.lat[condS])
final_dat3$latshift[condS] <- -1*(final_dat3$lat[condS] -
final_dat3$NN.lat[condS])
final_dat3$latshift[condS] <- -1*(final_dat3$lat[condS] -
final_dat3$lat_1800_today[condS])
hist(final_dat2$latshift)
hist(final_dat2$latshift_1800_today)
hist(final_dat3$latshift_1800_today)
ggplot(final_dat3) + geom_point(aes(y=lat,
x=lat_1800_today,
color=NN.sigma_1800_today), alpha=0.2) +
scale_color_gradient2(low="red", high="blue", mid="grey") +
theme_classic() + ylab("Latitude in 2000") +
xlab("Latitude of nearest neighbor in 1800") + geom_abline(intercept=0,slope=1) +
geom_abline(intercept=0,slope=-1)
ggplot(final_dat3) + geom_point(aes(y=lat,
x=lat_1800_today,
color=NN.sigma_1800_today), alpha=0.2) +
scale_color_gradient2(low="red", high="blue", mid="grey") +
theme_classic() + ylab("Latitude in 2000") +
xlab("Latitude of nearest neighbor in 1800") + geom_abline(intercept=0,slope=1)
